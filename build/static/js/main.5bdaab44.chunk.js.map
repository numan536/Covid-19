{"version":3,"sources":["logo.svg","components/Singlecontry.js","components/Tablefor.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Singlecountry","state","eachData","country","this","props","match","params","console","log","axios","get","then","responseTotal","setState","data","catch","style","textAlign","background","color","total_case","total_deaths","total_recovered","React","Component","Tablefor","container","fluid","Table","striped","bordered","hover","responsive","map","item","ID","to","new_case","new_deaths","active_cases","critical_cases","Home","width","height","align","backgroundSize","totalcount","App","allcountries","responseAll","Row","Col","Navbar","bg","variant","Brand","href","src","marginRight","Nav","className","Link","exact","path","render","routeProps","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5bdaab44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Singlecountry extends React.Component {\r\n\r\n    state = {\r\n        eachData: []\r\n    }\r\n    componentDidMount() {\r\n        const country = this.props.match?.params.country;\r\n        console.log('this is couuntry', country)\r\n        axios.get('https://www84.fanaticpixel.com/covid/data/get_country_data/' + country)\r\n            .then((responseTotal) => {\r\n                this.setState({\r\n                    eachData: responseTotal.data\r\n                })\r\n\r\n            }).catch(() => console.log('error'));\r\n    }\r\n\r\n    render() {\r\n        console.log('this is this.props in single contry', this.state)\r\n        return (\r\n            <div>\r\n\r\n                <h1 style={{ textAlign: 'center' }}>Country Name</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', background: 'black', color: 'white' }}>{this.state.eachData[0]?.country}</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center' }}>Total Infected</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', background: 'black', color: 'white' }}>{this.state.eachData[0]?.total_case}</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center' }}>Total Deaths</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', background: 'black', color: 'white' }}>{this.state.eachData[0]?.total_deaths}</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', }}>Total Recovered </h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', background: 'black', color: 'white' }}>{this.state.eachData[0]?.total_recovered}</h1>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Singlecountry;","import React from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\nimport Singlecountry from './Singlecontry';\r\n\r\n\r\nclass Tablefor extends React.Component {\r\n  render() {\r\n    return (\r\n      <div container fluid>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr >\r\n              <th>#</th>\r\n              <th>Country</th>\r\n              <th>Total Cases</th>\r\n              <th>New Cases</th>\r\n              <th>Deaths</th>\r\n              <th>New Deaths</th>\r\n              <th>Total Recovered</th>\r\n              <th>Active Cases</th>\r\n              <th>Critical Cases</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              this.props.data.map(item => {\r\n                return (\r\n                  <tr>\r\n\r\n                    <td>{item.ID}</td>\r\n\r\n                    <Link to={`/singlecountry/${item.country}`}>\r\n\r\n                      <td>{item.country}</td>\r\n                    </Link>\r\n\r\n                    <td >{item.total_case}</td>\r\n                    <td>{item.new_case}</td>\r\n                    <td>{item.total_deaths}</td>\r\n                    <td style={{ background: item.new_deaths ? 'red' : '' }}>{item.new_deaths}</td>\r\n                    <td style={{ background: item.total_recovered ? '#28a745' : '' }}>{item.total_recovered}</td>\r\n                    <td>{item.active_cases}</td>\r\n                    <td>{item.critical_cases}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Tablefor;","import React from 'react'\r\nimport { Row, Col, Container, Table } from 'react-bootstrap';\r\nimport { BrowserRouter, Switch, Link } from 'react-router-dom';\r\n\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    console.log('this.props', this.props)\r\n    return (\r\n      <div>\r\n\r\n\r\n        <div>\r\n          <div style={{ background: \"url('/images/corona5.png') no-repeat center\", width: \"100%\", height: \"600px\", align: 'center', backgroundSize: 'cover' }}>\r\n            <h1 style={{ textAlign: 'center', color: 'white' }}>Total Cases</h1>\r\n            <br />\r\n            <h1 style={{ textAlign: 'center', background: 'Lightblack', color: 'white' }}>{this.props.totalcount[0]?.total_case}</h1>\r\n            <br />\r\n            <h1 style={{ textAlign: 'center', color: 'white' }}>Total Deaths</h1>\r\n            <br />\r\n            <h1 style={{ textAlign: 'center', color: 'white' }}>{this.props.totalcount[0]?.total_deaths}</h1>\r\n            <br />\r\n            <h1 style={{ textAlign: 'center', color: 'white' }}>Total Recovered</h1>\r\n            <br />\r\n            <h1 style={{ textAlign: 'center', color: 'white' }}>{this.props.totalcount[0]?.total_recovered}</h1>\r\n            <h1 style={{ textAlign: 'center', color: 'white' }}>Critical Cases</h1>\r\n            <br />\r\n            <h1 style={{ textAlign: 'center', color: 'white' }}>{this.props.totalcount[0]?.critical_cases}</h1>\r\n          </div>\r\n        </div>\r\n      </div >\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport logo from './logo.svg';\nimport Tablefor from './components/Tablefor';\nimport axios from 'axios';\nimport Home from './components/Home';\nimport { BrowserRouter, Switch, Link } from 'react-router-dom';\nimport { Row, Col, Container, Table, Nav, Navbar } from 'react-bootstrap'\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport Singlecountry from './components/Singlecontry'\n\nclass App extends React.Component {\n\n  state = {\n    allcountries: [],\n    totalcount: []\n  }\n\n  componentDidMount() {\n    axios.get('https://www84.fanaticpixel.com/covid/data/get_totals')\n      .then((responseTotal) => {\n        this.setState({\n          totalcount: responseTotal.data\n        })\n        axios.get('https://www84.fanaticpixel.com/covid/data/get_countries_data')\n          .then((responseAll) => {\n            this.setState({\n              allcountries: responseAll.data\n            })\n            console.log('response.data', responseAll.data)\n          })\n      })\n      .catch(() => console.log('error'))\n  }\n  render() {\n    console.log('this.state', this.state)\n    return (\n      <div>\n        <BrowserRouter>\n          {/* <Container fluid> */}\n          <Row>\n            <Col>\n\n\n\n\n              <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"/\"><img src='/images/corona-logo-1.png' style={{ height: '50px', width: '50px', align: 'center', marginRight: 10 }} />Covid-19</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                  <Nav.Link><Link to=\"/\">Total Cases</Link></Nav.Link>\n                  <Nav.Link><Link to=\"/countries\">Countries</Link></Nav.Link>\n                </Nav>\n\n              </Navbar>\n\n            </Col>\n          </Row>\n\n\n          {/* </Container > */}\n          <Switch>\n\n            <Route exact path=\"/\" render={(routeProps) => <Home {...routeProps} totalcount={this.state.totalcount} />} />\n            <Route path=\"/countries\" render={(routeProps) => <Tablefor {...routeProps} data={this.state.allcountries} />} />\n            <Route path=\"/singlecountry/:country\" render={(routeProps) => <Singlecountry {...routeProps} />} />\n\n          </Switch>\n\n          {/* < Home totalcount={this.state.totalcount} /> */}\n          <div>\n            {/* <Tablefor data={this.state.allcountries} /> */}\n          </div>\n          {/* <Tablefor data={this.state.allcountries} /> */}\n\n        </BrowserRouter>\n\n\n\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport router from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}