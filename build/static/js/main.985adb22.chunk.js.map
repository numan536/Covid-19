{"version":3,"sources":["logo.svg","components/Chart2.js","components/Singlecontry.js","components/Tablefor.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChartsPage","console","log","this","props","totaldata","dataBar","labels","data","map","item","Date","updated_at","toLocaleDateString","datasets","label","total_case","replace","backgroundColor","borderWidth","borderColor","barChartOptions","responsive","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","display","color","yAxes","ticks","beginAtZero","className","options","React","Component","Singlecountry","state","eachData","country","match","params","axios","get","then","responseTotal","setState","catch","style","textAlign","background","total_deaths","total_recovered","Tablefor","container","fluid","Table","striped","bordered","hover","ID","to","new_case","new_deaths","active_cases","critical_cases","Home","totalcount","App","allcountries","responseAll","Row","Col","Navbar","bg","variant","Brand","href","src","height","width","align","marginRight","Nav","Link","exact","path","render","routeProps","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.985adb22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nclass ChartsPage extends React.Component {\r\n\r\n\r\n    render() {\r\n        console.log('this is props in chart2', this.props)\r\n\r\n        const updatedate = this.props.data.map((item) => {\r\n            return new Date(item.updated_at).toLocaleDateString()\r\n\r\n\r\n\r\n        })\r\n\r\n        const totalcount = this.props.data.map((item) => {\r\n            return item.total_case.replace(',', '')\r\n        });\r\n\r\n\r\n        const totaldata = {\r\n            dataBar: {\r\n                labels: updatedate,\r\n                datasets: [\r\n                    {\r\n                        label: \"Cases\",\r\n                        data: totalcount,\r\n                        backgroundColor: [\r\n                            \"rgba(255, 134,159,0.4)\",\r\n                            \"rgba(98,  182, 239,0.4)\",\r\n                            \"rgba(255, 218, 128,0.4)\",\r\n                            \"rgba(113, 205, 205,0.4)\",\r\n                            \"rgba(170, 128, 252,0.4)\",\r\n                            \"rgba(255, 177, 101,0.4)\"\r\n                        ],\r\n                        borderWidth: 2,\r\n                        borderColor: [\r\n                            \"rgba(255, 134, 159, 1)\",\r\n                            \"rgba(98,  182, 239, 1)\",\r\n                            \"rgba(255, 218, 128, 1)\",\r\n                            \"rgba(113, 205, 205, 1)\",\r\n                            \"rgba(170, 128, 252, 1)\",\r\n                            \"rgba(255, 177, 101, 1)\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            barChartOptions: {\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            barPercentage: 1,\r\n                            gridLines: {\r\n                                display: true,\r\n                                color: \"rgba(0, 0, 0, 0.1)\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            gridLines: {\r\n                                display: true,\r\n                                color: \"rgba(0, 0, 0, 0.1)\"\r\n                            },\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return (\r\n            <HashRouter>\r\n                <MDBContainer>\r\n                    <h3 className=\"mt-5\">Country</h3>\r\n                    <Bar data={totaldata.dataBar} options={totaldata.barChartOptions} />\r\n                </MDBContainer>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ChartsPage;","import React from 'react';\r\nimport axios from 'axios';\r\nimport ChartsPage from './Chart2';\r\nclass Singlecountry extends React.Component {\r\n\r\n    state = {\r\n        eachData: []\r\n    }\r\n    componentDidMount() {\r\n        const country = this.props.match?.params.country;\r\n        console.log('this is couuntry', country)\r\n        axios.get('https://www84.fanaticpixel.com/covid/data/get_country_data/' + country)\r\n            .then((responseTotal) => {\r\n                this.setState({\r\n                    eachData: responseTotal.data\r\n                })\r\n\r\n            }).catch(() => console.log('error'));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log('this is this.props in single contry', this.state)\r\n        return (\r\n            <div>\r\n\r\n                <h1 style={{ textAlign: 'center' }}>Country Name</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', background: 'black', color: 'white' }}>{this.state.eachData[0]?.country}</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center' }}>Total Infected</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', background: 'black', color: 'white' }}>{this.state.eachData[0]?.total_case}</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center' }}>Total Deaths</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', background: 'black', color: 'white' }}>{this.state.eachData[0]?.total_deaths}</h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', }}>Total Recovered </h1>\r\n                <br />\r\n                <h1 style={{ textAlign: 'center', background: 'black', color: 'white' }}>{this.state.eachData[0]?.total_recovered}</h1>\r\n\r\n                <ChartsPage data={this.state.eachData} />\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Singlecountry;","import React from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\nimport Singlecountry from './Singlecontry';\r\n\r\n\r\nclass Tablefor extends React.Component {\r\n  render() {\r\n    return (\r\n      <div container fluid>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr >\r\n              <th>#</th>\r\n              <th>Country</th>\r\n              <th>Total Cases</th>\r\n              <th>New Cases</th>\r\n              <th>Deaths</th>\r\n              <th>New Deaths</th>\r\n              <th>Total Recovered</th>\r\n              <th>Active Cases</th>\r\n              <th>Critical Cases</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              this.props.data.map(item => {\r\n                return (\r\n                  <tr>\r\n\r\n                    <td>{item.ID}</td>\r\n                    <td>\r\n                      <Link to={`/singlecountry/${item.country}`}>\r\n\r\n                        {item.country}\r\n                      </Link>\r\n                    </td>\r\n\r\n                    <td >{item.total_case}</td>\r\n                    <td>{item.new_case}</td>\r\n                    <td>{item.total_deaths}</td>\r\n                    <td style={{ background: item.new_deaths ? 'red' : '' }}>{item.new_deaths}</td>\r\n                    <td style={{ background: item.total_recovered ? '#28a745' : '' }}>{item.total_recovered}</td>\r\n                    <td>{item.active_cases}</td>\r\n                    <td>{item.critical_cases}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Tablefor;","import React from 'react'\r\nimport { Row, Col, Container, Table } from 'react-bootstrap';\r\nimport { BrowserRouter, Switch, Link } from 'react-router-dom';\r\n\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    console.log('this.props', this.props)\r\n    return (\r\n      <div>\r\n\r\n\r\n        <div style={{ background: '#0000ff3d' }}>\r\n\r\n          {/* <div style={{ background: \"url('/images/corona6.png') no-repeat center\", width: \"100%\", height: \"600px\", align: 'center', backgroundSize: 'cover' }}> */}\r\n          <h1 style={{ textAlign: 'center', color: 'black' }}>Total Cases</h1>\r\n          <br />\r\n          <h1 style={{ textAlign: 'center', background: 'Lightblack', color: 'black' }}>{this.props.totalcount[0]?.total_case}</h1>\r\n          <br />\r\n          <h1 style={{ textAlign: 'center', color: 'black' }}>Total Deaths</h1>\r\n          <br />\r\n          <h1 style={{ textAlign: 'center', color: 'black' }}>{this.props.totalcount[0]?.total_deaths}</h1>\r\n          <br />\r\n          <h1 style={{ textAlign: 'center', color: 'black' }}>Total Recovered</h1>\r\n          <br />\r\n          <h1 style={{ textAlign: 'center', color: 'black' }}>{this.props.totalcount[0]?.total_recovered}</h1>\r\n          <h1 style={{ textAlign: 'center', color: 'black' }}>Critical Cases</h1>\r\n          <br />\r\n          <h1 style={{ textAlign: 'center', color: 'black' }}>{this.props.totalcount[0]?.critical_cases}</h1>\r\n        </div>\r\n      </div>\r\n      // </div >\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport logo from './logo.svg';\nimport Tablefor from './components/Tablefor';\nimport axios from 'axios';\nimport Home from './components/Home';\nimport { BrowserRouter, Switch, Link } from 'react-router-dom';\nimport { Row, Col, Container, Table, Nav, Navbar } from 'react-bootstrap';\nimport './App.css';\nimport { Route, NavLink, HashRouter } from 'react-router-dom';\nimport Singlecountry from './components/Singlecontry';\n// import Datatableexample from './components/Bstable';\n// import Bstable from './components/Bstable';\nimport ChartsPage from './components/Chart2';\n\n\nclass App extends React.Component {\n\n  state = {\n    allcountries: [],\n    totalcount: [],\n    eachData: []\n  }\n\n\n  componentDidMount() {\n\n    axios.get('https://www84.fanaticpixel.com/covid/data/get_totals')\n      .then((responseTotal) => {\n        this.setState({\n          totalcount: responseTotal.data\n        })\n        axios.get('https://www84.fanaticpixel.com/covid/data/get_countries_data')\n          .then((responseAll) => {\n            this.setState({\n              allcountries: responseAll.data\n            })\n            console.log('response.data', responseAll.data)\n          })\n      })\n      .catch(() => console.log('error'))\n  }\n\n  // handleclickRow = (country) => {\n  //   axios.get('https://www84.fanaticpixel.com/covid/data/get_country_data/' + country)\n  //     .then((responseTotal) => {\n  //       this.setState({\n  //         eachData: responseTotal.data\n  //       })\n\n  //     }).catch(() => console.log('error'));\n  //   // this.setState({\n  //   //   eachData : \n  //   // })\n  // }\n\n\n  render() {\n    console.log('this.state', this.state)\n    return (\n\n\n      <div>\n        <HashRouter>\n          <BrowserRouter>\n            {/* <Container fluid> */}\n            <Row>\n              <Col>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                  <Navbar.Brand href=\"/\"><img src='/images/corona-logo-1.png' style={{ height: '50px', width: '50px', align: 'center', marginRight: 10 }} />Covid-19</Navbar.Brand>\n                  <Nav className=\"mr-auto\">\n                    <Nav.Link><Link to=\"/\">Total Cases</Link></Nav.Link>\n                    <Nav.Link><Link to=\"/countries\">Countries</Link></Nav.Link>\n                  </Nav>\n                </Navbar>\n              </Col>\n            </Row>\n\n\n            {/* </Container > */}\n            <Switch>\n\n              <Route exact path=\"/\" render={(routeProps) => <Home {...routeProps} totalcount={this.state.totalcount} />} />\n              <Route path=\"/countries\" render={(routeProps) => <Tablefor {...routeProps} data={this.state.allcountries} />} />\n              <Route path=\"/singlecountry/:country\" render={(routeProps) => <Singlecountry {...routeProps} />} />\n              <Route path=\"/countries\" render={(routeProps) => <Tablefor {...routeProps} data={this.state.allcountries} />} />\n\n            </Switch>\n\n            {/* < Home totalcount={this.state.totalcount} />\n          <div>\n            <Bstable data={this.state.allcountries} />\n            <ChartsPage data={this.state.eachData} />\n\n          </div> */}\n\n\n\n          </BrowserRouter>\n        </HashRouter>\n\n\n\n\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport router from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}